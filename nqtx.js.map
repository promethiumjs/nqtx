{"mappings":"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","sources":["src/nqtx.js","src/Entity.js","src/adaptations/adaptations.js","src/adaptations/adaptEntity.js","src/adaptations/adaptParticle.js","src/adaptations/adaptParticleObject.js","src/adaptations/adaptDerivative.js","src/adaptations/adaptDerivativeObject.js","src/adaptations/adaptTrigger.js"],"sourcesContent":["import Entity from \"./Entity\";\r\nimport adaptEntity from \"./adaptations/adaptEntity\";\r\nimport adaptParticle from \"./adaptations/adaptParticle\";\r\nimport adaptParticleObject from \"./adaptations/adaptParticleObject\";\r\nimport adaptDerivative from \"./adaptations/adaptDerivative\";\r\nimport adaptDerivativeObject from \"./adaptations/adaptDerivativeObject\";\r\nimport adaptTrigger from \"./adaptations/adaptTrigger\";\r\n\r\nexport default Entity;\r\nexport {\r\n  adaptTrigger,\r\n  adaptEntity,\r\n  adaptParticle,\r\n  adaptParticleObject,\r\n  adaptDerivative,\r\n  adaptDerivativeObject,\r\n};\r\n","import {\r\n  setCurrentEntity,\r\n  addAdaptationMethods,\r\n  setPreventMultipleRenders,\r\n  renderComponent,\r\n} from \"./adaptations/adaptations\";\r\n\r\nexport default class Entity {\r\n  constructor(initial) {\r\n    //initialize particles(with initial states if any).\r\n    this.particles = {\r\n      states: initial ? initial.particleStates || {} : {},\r\n      mutators: {},\r\n      derivativeSubs: {},\r\n      componentSubs: {},\r\n      otherSubs: {},\r\n      otherSubs_instant: {},\r\n    };\r\n    this._particles = {};\r\n\r\n    //initialize derivatives(with initial states if any).\r\n    this.derivatives = {\r\n      states: initial ? initial.derivativeStates || {} : {},\r\n      transforms: {},\r\n      particleSubs: {},\r\n      componentSubs: {},\r\n      otherSubs: {},\r\n      otherSubs_instant: {},\r\n    };\r\n    this._derivatives = {};\r\n\r\n    //initialize triggers.\r\n    this.triggers = {\r\n      subscriptions: {},\r\n    };\r\n    this._triggers = {};\r\n  }\r\n\r\n  static create(initialParticleStates) {\r\n    const entity = new Entity(initialParticleStates);\r\n    setCurrentEntity(entity);\r\n\r\n    return entity;\r\n  }\r\n\r\n  //obtain adaptation methods from nqtui to power nqtx adaptations.\r\n  addAdaptationMethods(methods) {\r\n    addAdaptationMethods(methods);\r\n  }\r\n\r\n  set({ particleId, newState }) {\r\n    const _particle = this._particles[particleId];\r\n    const states = this.particles.states;\r\n    const derivativeSubs = this.particles.derivativeSubs;\r\n    const componentSubs = this.particles.componentSubs;\r\n    const otherSubs = this.particles.otherSubs;\r\n    const otherSubs_instant = this.particles.otherSubs_instant;\r\n\r\n    if (_particle.previous !== undefined) _particle.previous = _particle.state;\r\n\r\n    //the state has to be updated in two places because of the presence of this.particles\r\n    //and this._particles.\r\n    if (newState !== undefined) {\r\n      _particle.state = newState;\r\n      states[particleId] = newState;\r\n    } else {\r\n      _particle.state = null;\r\n      states[particleId] = null;\r\n    }\r\n\r\n    //update all subscribers while avoiding redundant renders.\r\n    setPreventMultipleRenders(true);\r\n    if (otherSubs_instant[particleId])\r\n      otherSubs_instant[particleId].forEach((listener) => listener(newState));\r\n    if (derivativeSubs[particleId])\r\n      derivativeSubs[particleId].forEach((derivativeId) =>\r\n        this.update({ derivativeId })\r\n      );\r\n    if (componentSubs[particleId]) {\r\n      componentSubs[particleId].forEach((storeId) => renderComponent(storeId));\r\n    }\r\n    if (otherSubs[particleId])\r\n      setTimeout(() =>\r\n        otherSubs[particleId].forEach((listener) => listener(newState))\r\n      );\r\n    setPreventMultipleRenders(false);\r\n  }\r\n\r\n  get({ particleId, derivativeId, firstTime }) {\r\n    const states = this.particles.states;\r\n    if (states[particleId] === undefined) {\r\n      console.error(\r\n        `The particle you are trying to access with id: ${particleId} doesn't exist`\r\n      );\r\n      throw new Error(`Cannot access state of particle: \"${particleId}\"`);\r\n    }\r\n\r\n    //add to derivative subscriptions if the derivative is now being initialized and hasn't\r\n    //yet been added.\r\n    if (firstTime) {\r\n      const derivativeSubs = this.particles.derivativeSubs;\r\n      if (derivativeSubs[particleId]) {\r\n        if (derivativeSubs[particleId].includes(derivativeId)) {\r\n          //return value if derivative has already been added to subscriptions\r\n          return states[particleId];\r\n        }\r\n        derivativeSubs[particleId].push(derivativeId);\r\n      } else {\r\n        derivativeSubs[particleId] = [];\r\n        derivativeSubs[particleId].push(derivativeId);\r\n      }\r\n\r\n      const particleSubs = this.derivatives.particleSubs;\r\n      const unsubscribe = () => {\r\n        //try catch to prevent crashing due to errors in case the\r\n        //particle has already been deleted.\r\n        try {\r\n          const index = derivativeSubs[particleId].indexOf(derivativeId);\r\n          derivativeSubs[particleId].splice(index, 1);\r\n        } catch (err) {\r\n          //throw error into the abyss.\r\n        }\r\n      };\r\n      if (particleSubs[derivativeId])\r\n        particleSubs[derivativeId].push(unsubscribe);\r\n      else {\r\n        particleSubs[derivativeId] = [];\r\n        particleSubs[derivativeId].push(unsubscribe);\r\n      }\r\n    }\r\n\r\n    return states[particleId];\r\n  }\r\n\r\n  getPrevious({ particleId, derivativeId, firstTime }) {\r\n    const _particle = this._particles[particleId];\r\n\r\n    if (_particle.previous === undefined) {\r\n      console.error(\r\n        `The particle you are trying to access with id: ${particleId} either \r\n        doesn't exist or doesn't have it's \"previousState\" flag set to true`\r\n      );\r\n      throw new Error(\r\n        `Cannot access previous state of particle: \"${particleId}\"`\r\n      );\r\n    }\r\n\r\n    //add to derivative subscriptions if the derivative is now being initialized and hasn't\r\n    //yet been added.\r\n    if (firstTime) {\r\n      const derivativeSubs = this.particles.derivativeSubs;\r\n      if (derivativeSubs[particleId]) {\r\n        if (derivativeSubs[particleId].includes(derivativeId)) {\r\n          //return value if derivative has already been added to subscriptions.\r\n          return _particle.previous;\r\n        }\r\n        derivativeSubs[particleId].push(derivativeId);\r\n      } else {\r\n        derivativeSubs[particleId] = [];\r\n        derivativeSubs[particleId].push(derivativeId);\r\n      }\r\n\r\n      const particleSubs = this.derivatives.particleSubs;\r\n      const unsubscribe = () => {\r\n        //try catch to prevent crashing due to errors in case the\r\n        //particle has already been deleted.\r\n        try {\r\n          const index = derivativeSubs[particleId].indexOf(derivativeId);\r\n          derivativeSubs[particleId].splice(index, 1);\r\n        } catch (err) {\r\n          //throw error into the abyss.\r\n        }\r\n      };\r\n      if (particleSubs[derivativeId])\r\n        particleSubs[derivativeId].push(unsubscribe);\r\n      else {\r\n        particleSubs[derivativeId] = [];\r\n        particleSubs[derivativeId].push(unsubscribe);\r\n      }\r\n    }\r\n\r\n    return _particle.previous;\r\n  }\r\n\r\n  update({ derivativeId }) {\r\n    const _derivative = this._derivatives[derivativeId];\r\n    const states = this.derivatives.states;\r\n    const transforms = this.derivatives.transforms;\r\n    const componentSubs = this.derivatives.componentSubs;\r\n    const otherSubs = this.derivatives.otherSubs;\r\n    const otherSubs_instant = this.derivatives.otherSubs_instant;\r\n\r\n    if (_derivative.previous !== undefined)\r\n      _derivative.previous = _derivative.state;\r\n\r\n    //generate new state of derivative.\r\n    let newState;\r\n    try {\r\n      newState = transforms[derivativeId]({\r\n        get: (particleId) => this.get({ particleId, derivativeId }),\r\n        getPrevious: (particleId) => this.getPrevious({ particleId }),\r\n        state: states[derivativeId],\r\n      });\r\n    } catch (err) {\r\n      newState = null;\r\n    }\r\n\r\n    //the state has to be updated in two places because of the presence of this.derivatives\r\n    //and this._derivatives.\r\n    if (newState !== undefined) {\r\n      _derivative.state = newState;\r\n      states[derivativeId] = newState;\r\n    } else {\r\n      _derivative.state = null;\r\n      states[derivativeId] = null;\r\n    }\r\n\r\n    //update all subscribers(redundant renders have already been prevented in\r\n    //the \"set\" function).\r\n    if (otherSubs_instant[derivativeId])\r\n      otherSubs_instant[derivativeId].forEach((listener) => listener(newState));\r\n    if (componentSubs[derivativeId]) {\r\n      componentSubs[derivativeId].forEach((storeId) =>\r\n        renderComponent(storeId)\r\n      );\r\n    }\r\n    if (otherSubs[derivativeId])\r\n      setTimeout(() =>\r\n        otherSubs[derivativeId].forEach((listener) => listener(newState))\r\n      );\r\n  }\r\n\r\n  getParticleStates() {\r\n    return this.particles.states;\r\n  }\r\n\r\n  getDerivativeStates() {\r\n    return this.derivatives.states;\r\n  }\r\n\r\n  getParticle({ id, storeId }) {\r\n    if (!this._particles[id]) {\r\n      console.error(\r\n        `You are trying to access a particle with id: \"${id}\" that doesn't yet exist`\r\n      );\r\n      throw new Error(`Particle: \"${id}\" is not accessible`);\r\n    }\r\n\r\n    //add storeId to component subscriptions if present.\r\n    if (storeId) {\r\n      const componentSubs = this.particles.componentSubs;\r\n      if (componentSubs[id]) {\r\n        componentSubs[id].push(storeId);\r\n      } else {\r\n        componentSubs[id] = [];\r\n        componentSubs[id].push(storeId);\r\n      }\r\n      const unsubscribe = () => {\r\n        //try catch to prevent crashing due to errors in case the\r\n        //particle has already been deleted.\r\n        try {\r\n          const index = componentSubs[id].indexOf(storeId);\r\n          componentSubs[id].splice(index, 1);\r\n        } catch (err) {\r\n          //throw error into the abyss.\r\n        }\r\n      };\r\n\r\n      return [this._particles[id], unsubscribe];\r\n    }\r\n\r\n    return this._particles[id];\r\n  }\r\n\r\n  setParticle({ id, initialState, mutator, previousState }) {\r\n    const states = this.particles.states;\r\n    const mutators = this.particles.mutators;\r\n    const derivativeSubs = this.particles.derivativeSubs;\r\n    const componentSubs = this.particles.componentSubs;\r\n    const otherSubs = this.particles.otherSubs;\r\n    const otherSubs_instant = this.particles.otherSubs_instant;\r\n\r\n    if (initialState !== undefined) {\r\n      states[id] = initialState;\r\n    } else if (states[id] === undefined) {\r\n      states[id] = null;\r\n    }\r\n    if (mutator) {\r\n      mutators[id] = mutator;\r\n    }\r\n\r\n    this._particles[id] = {\r\n      state: states[id],\r\n      get: () => states[id],\r\n      mutate: (mutation, payload) => {\r\n        this.set({\r\n          particleId: id,\r\n          newState: mutators[id][mutation]({ state: states[id], payload }),\r\n        });\r\n      },\r\n      set: (newState) => this.set({ particleId: id, newState }),\r\n      subscribe: (listener) => {\r\n        if (otherSubs[id]) otherSubs[id].push(listener);\r\n        else {\r\n          otherSubs[id] = [];\r\n          otherSubs[id].push(listener);\r\n        }\r\n        return () => {\r\n          try {\r\n            const index = otherSubs[id].indexOf(listener);\r\n            otherSubs[id].splice(index, 1);\r\n          } catch (err) {}\r\n        };\r\n      },\r\n      subscribe_instant: (listener) => {\r\n        if (otherSubs_instant[id]) otherSubs_instant[id].push(listener);\r\n        else {\r\n          otherSubs_instant[id] = [];\r\n          otherSubs_instant[id].push(listener);\r\n        }\r\n        return () => {\r\n          try {\r\n            const index = otherSubs_instant[id].indexOf(listener);\r\n            otherSubs_instant[id].splice(index, 1);\r\n          } catch (err) {}\r\n        };\r\n      },\r\n      detonate: () => {\r\n        //set properties to null to release all existing references to the particle\r\n        //and it's properties to enable garbage collection and avoid memory leaks.\r\n        this._particles[id].state = null;\r\n        this._particles[id].previous = null;\r\n        this._particles[id].get = null;\r\n        this._particles[id].mutate = null;\r\n        this._particles[id].set = null;\r\n        this._particles[id].subscribe = null;\r\n        this._particles[id].subscribe_instant = null;\r\n        this._particles[id].detonate = null;\r\n\r\n        delete this._particles[id];\r\n        delete states[id];\r\n        delete mutators[id];\r\n        delete derivativeSubs[id];\r\n        delete componentSubs[id];\r\n        delete otherSubs[id];\r\n        delete otherSubs_instant[id];\r\n      },\r\n    };\r\n\r\n    if (previousState) this._particles[id].previous = states[id];\r\n  }\r\n\r\n  particle({ id, initialState, mutator, overwrite, previousState }) {\r\n    if (this._particles[id]) return this.getParticle({ id });\r\n\r\n    //initialize particle based on provided data.\r\n    const states = this.particles.states;\r\n    if (!states[id])\r\n      this.setParticle({ id, initialState, mutator, previousState });\r\n    else {\r\n      if (states[id] && !overwrite)\r\n        this.setParticle({ id, mutator, previousState });\r\n      else this.setParticle({ id, initialState, mutator, previousState });\r\n    }\r\n\r\n    return this.getParticle({ id });\r\n  }\r\n\r\n  getDerivative({ id, storeId }) {\r\n    if (!this._derivatives[id]) {\r\n      console.error(\r\n        `You are trying to access a derivative with id: \"${id}\" that doesn't yet exist`\r\n      );\r\n      throw new Error(`Derivative: \"${id}\" is not accessible`);\r\n    }\r\n\r\n    //add storeId to component subscriptions if present.\r\n    if (storeId) {\r\n      const componentSubs = this.derivatives.componentSubs;\r\n      if (componentSubs[id]) {\r\n        componentSubs[id].push(storeId);\r\n      } else {\r\n        componentSubs[id] = [];\r\n        componentSubs[id].push(storeId);\r\n      }\r\n      const unsubscribe = () => {\r\n        //try catch to prevent crashing due to errors in case the\r\n        //derivative has already been deleted.\r\n        try {\r\n          const index = componentSubs[id].indexOf(storeId);\r\n          componentSubs[id].splice(index, 1);\r\n        } catch (err) {\r\n          //throw error into the abyss.\r\n        }\r\n      };\r\n\r\n      return [this._derivatives[id], unsubscribe];\r\n    }\r\n\r\n    return this._derivatives[id];\r\n  }\r\n\r\n  setDerivative({ id, initialState, transform, previousState }) {\r\n    const states = this.derivatives.states;\r\n    const transforms = this.derivatives.transforms;\r\n    const particleSubs = this.derivatives.particleSubs;\r\n    const componentSubs = this.derivatives.componentSubs;\r\n    const otherSubs = this.derivatives.otherSubs;\r\n    const otherSubs_instant = this.derivatives.otherSubs_instant;\r\n\r\n    if (transform) {\r\n      transforms[id] = transform;\r\n    }\r\n\r\n    if (initialState !== undefined) {\r\n      states[id] = initialState;\r\n    } else if (states[id] === undefined) {\r\n      try {\r\n        states[id] = transforms[id]({\r\n          get: (particleId) =>\r\n            this.get({ particleId, derivativeId: id, firstTime: true }),\r\n          getPrevious: (particleId) =>\r\n            this.getPrevious({ particleId, derivativeId: id, firstTime: true }),\r\n        });\r\n      } catch (err) {\r\n        states[id] = null;\r\n      }\r\n\r\n      if (states[id] === undefined) states[id] === null;\r\n    }\r\n\r\n    this._derivatives[id] = {\r\n      state: states[id],\r\n      get: (payload) => {\r\n        return transforms[id]({\r\n          get: (particleId) => this.get({ particleId, derivativeId: id }),\r\n          getPrevious: (particleId) =>\r\n            this.getPrevious({ particleId, derivativeId: id }),\r\n          payload,\r\n          state: states[id],\r\n        });\r\n      },\r\n      subscribe: (listener) => {\r\n        if (otherSubs[id]) otherSubs[id].push(listener);\r\n        else {\r\n          otherSubs[id] = [];\r\n          otherSubs[id].push(listener);\r\n        }\r\n        return () => {\r\n          try {\r\n            const index = otherSubs[id].indexOf(listener);\r\n            otherSubs[id].splice(index, 1);\r\n          } catch (err) {}\r\n        };\r\n      },\r\n      subscribe_instant: (listener) => {\r\n        if (otherSubs_instant[id]) otherSubs_instant[id].push(listener);\r\n        else {\r\n          otherSubs_instant[id] = [];\r\n          otherSubs_instant[id].push(listener);\r\n        }\r\n        return () => {\r\n          try {\r\n            const index = otherSubs_instant[id].indexOf(listener);\r\n            otherSubs_instant[id].splice(index, 1);\r\n          } catch (err) {}\r\n        };\r\n      },\r\n      detonate: () => {\r\n        //set properties to null to release all existing references to the derivative\r\n        //and it's properties to enable garbage collection and avoid memory leaks.\r\n        this._derivatives[id].state = null;\r\n        this._derivatives[id].previous = null;\r\n        this._derivatives[id].get = null;\r\n        this._derivatives[id].subscribe = null;\r\n        this._derivatives[id].subscribe_instant = null;\r\n        this._derivatives[id].detonate = null;\r\n\r\n        //unsubscribe from all particles currently subscribed to.\r\n        particleSubs[id].forEach((unsubscribe) => unsubscribe());\r\n\r\n        delete this._derivatives[id];\r\n        delete states[id];\r\n        delete transforms[id];\r\n        delete particleSubs[id];\r\n        delete componentSubs[id];\r\n        delete otherSubs[id];\r\n      },\r\n    };\r\n\r\n    if (previousState) this._derivatives[id].previous = states[id];\r\n  }\r\n\r\n  derivative({ id, initialState, transform, overwrite, previousState }) {\r\n    if (this._derivatives[id]) return this.getDerivative({ id });\r\n\r\n    //initialize particle based on provided data.\r\n    const states = this.derivatives.states;\r\n    if (!states[id])\r\n      this.setDerivative({ id, initialState, transform, previousState });\r\n    else {\r\n      if (states[id] && !overwrite)\r\n        this.setDerivative({ id, transform, previousState });\r\n      else this.setDerivative({ id, initialState, transform, previousState });\r\n    }\r\n\r\n    return this.getDerivative({ id });\r\n  }\r\n\r\n  getTrigger({ id }) {\r\n    //return surrogate if the trigger is not ready.\r\n    if (!this._triggers[id]) {\r\n      console.error(\r\n        `You are trying to access a trigger with id: \"${id}\" that doesn't yet exist`\r\n      );\r\n      throw new Error(`Trigger: \"${id}\" is not accessible`);\r\n    }\r\n\r\n    return this._triggers[id];\r\n  }\r\n\r\n  setTrigger({ id, initialSubscriptions }) {\r\n    const subscriptions = this.triggers.subscriptions;\r\n    subscriptions[id] = initialSubscriptions || [];\r\n\r\n    this._triggers[id] = {\r\n      invoke: (...payload) => {\r\n        subscriptions[id].forEach((listener) => listener(...payload));\r\n      },\r\n      subscribe: (listener) => {\r\n        subscriptions[id].push(listener);\r\n        return () => {\r\n          try {\r\n            const index = subscriptions[id].indexOf(listener);\r\n            subscriptions[id].splice(index, 1);\r\n          } catch (err) {}\r\n        };\r\n      },\r\n      detonate: () => {\r\n        //set properties to null to release all existing references to the trigger\r\n        //and it's properties to enable garbage collection and avoid memory leaks.\r\n        this._triggers[id].invoke = null;\r\n        this._triggers[id].subscribe = null;\r\n\r\n        delete this._triggers[id];\r\n        delete subscriptions[id];\r\n      },\r\n    };\r\n  }\r\n\r\n  trigger({ id, initialSubscriptions }) {\r\n    if (this._triggers[id]) return this.getTrigger({ id });\r\n\r\n    this.setTrigger({ id, initialSubscriptions });\r\n    return this.getTrigger({ id });\r\n  }\r\n}\r\n","let currentEntity;\r\n\r\nfunction setCurrentEntity(entity) {\r\n  currentEntity = entity;\r\n}\r\n\r\nfunction getCurrentEntity() {\r\n  return currentEntity;\r\n}\r\n\r\nlet getCurrentStoreMethod;\r\n\r\nfunction getCurrentStore(storeId) {\r\n  return getCurrentStoreMethod(storeId);\r\n}\r\n\r\nlet getCurrentStoreIdMethod;\r\n\r\nfunction getCurrentStoreId() {\r\n  return getCurrentStoreIdMethod();\r\n}\r\n\r\nlet renderComponentMethod;\r\n\r\nfunction renderComponent(storeId) {\r\n  renderComponentMethod(storeId);\r\n}\r\n\r\nlet getPreventMultipleRendersMethod;\r\n\r\nfunction getPreventMultipleRenders() {\r\n  return getPreventMultipleRendersMethod;\r\n}\r\n\r\nlet setPreventMultipleRendersMethod;\r\n\r\nfunction setPreventMultipleRenders(boolean) {\r\n  setPreventMultipleRendersMethod(boolean);\r\n}\r\n\r\nfunction addAdaptationMethods({\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  renderComponent,\r\n  getPreventMultipleRenders,\r\n  setPreventMultipleRenders,\r\n}) {\r\n  getCurrentStoreMethod = getCurrentStore;\r\n  getCurrentStoreIdMethod = getCurrentStoreId;\r\n  renderComponentMethod = renderComponent;\r\n  getPreventMultipleRendersMethod = getPreventMultipleRenders;\r\n  setPreventMultipleRendersMethod = setPreventMultipleRenders;\r\n}\r\n\r\nexport {\r\n  setCurrentEntity,\r\n  getCurrentEntity,\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  renderComponent,\r\n  addAdaptationMethods,\r\n  getPreventMultipleRenders,\r\n  setPreventMultipleRenders,\r\n};\r\n","import { getCurrentEntity } from \"./adaptations\";\r\n\r\nfunction adaptEntity() {\r\n  return getCurrentEntity();\r\n}\r\n\r\nexport default adaptEntity;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\n\r\nfunction adaptParticle(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.particles) {\r\n    currentStore.particles = [];\r\n    currentStore.currentAdaptationIds.particle = 0;\r\n    currentStore.particleCleanups = [];\r\n    currentStore.currentAdaptationIds.particleCleanup = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (\r\n      !(currentStore.currentAdaptationIds.particle in currentStore.particles)\r\n    ) {\r\n      let particle = currentEntity.getParticle({ id, storeId: currentStoreId });\r\n      currentStore.particles[currentStore.currentAdaptationIds.particle] = [\r\n        particle[0].state,\r\n        particle[0],\r\n      ];\r\n      currentStore.particleCleanups[\r\n        currentStore.currentAdaptationIds.particleCleanup\r\n      ] = particle[1];\r\n    }\r\n    let particle0 =\r\n      currentStore.particles[currentStore.currentAdaptationIds.particle];\r\n    particle0[0] = particle0[1].state;\r\n\r\n    return currentStore.particles[currentStore.currentAdaptationIds.particle++];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptParticle() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptParticle;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\n\r\nfunction adaptParticleObject(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.particles) {\r\n    currentStore.particles = [];\r\n    currentStore.currentAdaptationIds.particle = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (\r\n      !(currentStore.currentAdaptationIds.particle in currentStore.particles)\r\n    ) {\r\n      let particle = currentEntity.getParticle({ id });\r\n      currentStore.particles[currentStore.currentAdaptationIds.particle] =\r\n        particle;\r\n    }\r\n\r\n    return currentStore.particles[currentStore.currentAdaptationIds.particle++];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptParticleObject() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptParticleObject;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\n\r\nfunction adaptDerivative(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.derivatives) {\r\n    currentStore.derivatives = [];\r\n    currentStore.currentAdaptationIds.derivative = 0;\r\n    currentStore.derivativeCleanups = [];\r\n    currentStore.currentAdaptationIds.derivativeCleanup = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (\r\n      !(\r\n        currentStore.currentAdaptationIds.derivative in currentStore.derivatives\r\n      )\r\n    ) {\r\n      let derivative = currentEntity.getDerivative({\r\n        id,\r\n        storeId: currentStoreId,\r\n      });\r\n      currentStore.derivatives[currentStore.currentAdaptationIds.derivative] = [\r\n        derivative[0].state,\r\n        derivative[0],\r\n      ];\r\n      currentStore.derivativeCleanups[\r\n        currentStore.currentAdaptationIds.derivativeCleanup\r\n      ] = derivative[1];\r\n    }\r\n    let derivative0 =\r\n      currentStore.derivatives[currentStore.currentAdaptationIds.derivative];\r\n    derivative0[0] = derivative0[1].state;\r\n\r\n    return currentStore.derivatives[\r\n      currentStore.currentAdaptationIds.derivative++\r\n    ];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptDerivative() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptDerivative;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\n\r\nfunction adaptDerivativeObject(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.derivatives) {\r\n    currentStore.derivatives = [];\r\n    currentStore.currentAdaptationIds.derivative = 0;\r\n    currentStore.derivativeCleanups = [];\r\n    currentStore.currentAdaptationIds.derivativeCleanup = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (\r\n      !(\r\n        currentStore.currentAdaptationIds.derivative in currentStore.derivatives\r\n      )\r\n    ) {\r\n      let derivative = currentEntity.getDerivative({ id });\r\n      currentStore.derivatives[currentStore.currentAdaptationIds.derivative] =\r\n        derivative;\r\n    }\r\n\r\n    return currentStore.derivatives[\r\n      currentStore.currentAdaptationIds.derivative++\r\n    ];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptDerivativeObject() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptDerivativeObject;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\n\r\nfunction adaptTrigger(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.triggers) {\r\n    currentStore.triggers = [];\r\n    currentStore.currentAdaptationIds.trigger = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (!(currentStore.currentAdaptationIds.trigger in currentStore.triggers)) {\r\n      currentStore.triggers[currentStore.currentAdaptationIds.trigger] =\r\n        currentEntity.getTrigger({ id });\r\n    }\r\n\r\n    return currentStore.triggers[currentStore.currentAdaptationIds.trigger++];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptTrigger() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptTrigger;\r\n"],"names":[],"version":3,"file":"nqtx.js.map"}