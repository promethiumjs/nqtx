{"mappings":"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","sources":["src/nqtx.js","src/Entity.js","src/adaptations/adaptations.js","src/adaptations/adaptEntity.js","src/adaptations/adaptParticle.js","src/adaptations/nqtxUpdates.js","src/adaptations/adaptTrigger.js","src/adaptations/adaptDerivative.js"],"sourcesContent":["import Entity from \"./Entity\";\r\nimport adaptEntity from \"./adaptations/adaptEntity\";\r\nimport adaptParticle from \"./adaptations/adaptParticle\";\r\nimport adaptTrigger from \"./adaptations/adaptTrigger\";\r\nimport adaptDerivative from \"./adaptations/adaptDerivative\";\r\n\r\nexport { Entity, adaptTrigger, adaptEntity, adaptParticle, adaptDerivative };\r\n","import {\r\n  setCurrentEntity,\r\n  addAdaptationMethods,\r\n  setPreventMultipleRenders,\r\n  renderComponent,\r\n} from \"./adaptations/adaptations\";\r\n\r\nexport default class Entity {\r\n  constructor(initialParticleStates = {}) {\r\n    //initialize particles(with initial states if any).\r\n    this.particles = {\r\n      states: initialParticleStates,\r\n      mutators: {},\r\n      derivativeSubs: {},\r\n      componentSubs: {},\r\n      otherSubs: {},\r\n    };\r\n    this._particles = {};\r\n\r\n    //initialize derivatives(with initial states if any).\r\n    this.derivatives = {\r\n      states: {},\r\n      transforms: {},\r\n      particleSubs: {},\r\n      componentSubs: {},\r\n      otherSubs: {},\r\n    };\r\n    this._derivatives = {};\r\n\r\n    //initialize triggers.\r\n    this.triggers = {\r\n      subscriptions: {},\r\n    };\r\n    this._triggers = {};\r\n  }\r\n\r\n  static create(initialParticleStates) {\r\n    const entity = new Entity(initialParticleStates);\r\n    setCurrentEntity(entity);\r\n\r\n    return entity;\r\n  }\r\n\r\n  //obtain adaptation methods from nqtui to power nqtx adaptations\r\n  addAdaptationMethods(methods) {\r\n    addAdaptationMethods(methods);\r\n  }\r\n\r\n  set({ particleId, newState }) {\r\n    const _particle = this._particles[particleId];\r\n    const states = this.particles.states;\r\n    const derivativeSubs = this.particles.derivativeSubs;\r\n    const componentSubs = this.particles.componentSubs;\r\n    const otherSubs = this.particles.otherSubs;\r\n\r\n    //the state has to be update in two places because of the presence of this.particles\r\n    //and this._particles.\r\n    _particle.state = newState;\r\n    states[particleId] = newState;\r\n\r\n    //update all subscribers while avoiding redundant renders.\r\n    setPreventMultipleRenders(true);\r\n    if (derivativeSubs[particleId])\r\n      derivativeSubs[particleId].forEach((derivativeId) =>\r\n        this.update({ derivativeId })\r\n      );\r\n    if (componentSubs[particleId]) {\r\n      componentSubs[particleId].forEach((storeId) => renderComponent(storeId));\r\n    }\r\n    if (otherSubs[particleId])\r\n      setTimeout(() => otherSubs[particleId].forEach((listener) => listener()));\r\n    setPreventMultipleRenders(false);\r\n  }\r\n\r\n  get({ particleId, derivativeId, firstTime }) {\r\n    const states = this.particles.states;\r\n\r\n    //add to derivative subscriptions if the derivative is now being initialized.\r\n    if (firstTime) {\r\n      const derivativeSubs = this.particles.derivativeSubs;\r\n      if (derivativeSubs[particleId])\r\n        derivativeSubs[particleId].push(derivativeId);\r\n      else {\r\n        derivativeSubs[particleId] = [];\r\n        derivativeSubs[particleId].push(derivativeId);\r\n      }\r\n\r\n      const particleSubs = this.derivatives.particleSubs;\r\n      const unsubscribe = () => {\r\n        //try catch to prevent crashing due to errors in case the\r\n        //particle has already been deleted.\r\n        try {\r\n          const index = derivativeSubs[particleId].indexOf(derivativeId);\r\n          derivativeSubs[particleId].splice(index, 1);\r\n        } catch (err) {\r\n          //throw error into the abyss.\r\n        }\r\n      };\r\n      if (particleSubs[derivativeId])\r\n        particleSubs[derivativeId].push(unsubscribe);\r\n      else {\r\n        particleSubs[derivativeId] = [];\r\n        particleSubs[derivativeId].push(unsubscribe);\r\n      }\r\n    }\r\n\r\n    return states[particleId];\r\n  }\r\n\r\n  update({ derivativeId }) {\r\n    const _derivative = this._derivatives[derivativeId];\r\n    const states = this.derivatives.states;\r\n    const transforms = this.derivatives.transforms;\r\n    const componentSubs = this.derivatives.componentSubs;\r\n    const otherSubs = this.derivatives.otherSubs;\r\n\r\n    //generate new state of derivative\r\n    let newState;\r\n    try {\r\n      newState = transforms[derivativeId]({\r\n        get: (particleId) => this.get({ particleId, derivativeId }),\r\n      });\r\n    } catch (err) {\r\n      newState = null;\r\n    }\r\n\r\n    //the state has to be update in two places because of the presence of this.particles\r\n    //and this._particles.\r\n    _derivative.state = newState;\r\n    states[derivativeId] = newState;\r\n\r\n    //update all subscribers(redundant renders have already been prevented in\r\n    //the \"set\" function).\r\n    if (componentSubs[derivativeId]) {\r\n      componentSubs[derivativeId].forEach((storeId) =>\r\n        renderComponent(storeId)\r\n      );\r\n    }\r\n    if (otherSubs[derivativeId])\r\n      setTimeout(() =>\r\n        otherSubs[derivativeId].forEach((listener) => listener())\r\n      );\r\n  }\r\n\r\n  getParticle({ id, storeId }) {\r\n    //return surrogate if the particle is not ready.\r\n    if (!this._particles[id]) {\r\n      const surrogate = {\r\n        state: null,\r\n        getState: () => {},\r\n        mutate: () => {},\r\n        set: () => {},\r\n        subscribe: () => {},\r\n        detonate: () => {},\r\n        unavailable: true,\r\n      };\r\n\r\n      if (storeId) {\r\n        return [surrogate, null];\r\n      }\r\n\r\n      return surrogate;\r\n    }\r\n\r\n    //add storeId to component subscriptions if present.\r\n    if (storeId) {\r\n      const componentSubs = this.particles.componentSubs;\r\n      if (componentSubs[id]) {\r\n        componentSubs[id].push(storeId);\r\n      } else {\r\n        componentSubs[id] = [];\r\n        componentSubs[id].push(storeId);\r\n      }\r\n      const unsubscribe = () => {\r\n        //try catch to prevent crashing due to errors in case the\r\n        //particle has already been deleted.\r\n        try {\r\n          const index = componentSubs[id].indexOf(storeId);\r\n          componentSubs[id].splice(index, 1);\r\n        } catch (err) {\r\n          //throw error into the abyss.\r\n        }\r\n      };\r\n\r\n      return [this._particles[id], unsubscribe];\r\n    }\r\n\r\n    return this._particles[id];\r\n  }\r\n\r\n  setParticle({ id, initialState, mutator }) {\r\n    const states = this.particles.states;\r\n    const mutators = this.particles.mutators;\r\n    const derivativeSubs = this.particles.derivativeSubs;\r\n    const componentSubs = this.particles.componentSubs;\r\n    const otherSubs = this.particles.otherSubs;\r\n\r\n    if (initialState !== undefined) {\r\n      states[id] = initialState;\r\n    }\r\n    if (mutator) {\r\n      mutators[id] = mutator;\r\n    }\r\n\r\n    this._particles[id] = {\r\n      state: states[id],\r\n      getState: () => states[id],\r\n      mutate: (mutation, payload) => {\r\n        this.set({\r\n          particleId: id,\r\n          newState: mutators[id][mutation]({ state: states[id], payload }),\r\n        });\r\n      },\r\n      set: (newState) => this.set({ particleId: id, newState }),\r\n      subscribe: (listener) => {\r\n        if (otherSubs[id]) otherSubs[id].push(listener);\r\n        else {\r\n          otherSubs[id] = [];\r\n          otherSubs[id].push(listener);\r\n        }\r\n        return () => {\r\n          const index = otherSubs[id].indexOf(listener);\r\n          otherSubs[id].splice(index, 1);\r\n        };\r\n      },\r\n      detonate: () => {\r\n        //set properties to null to release all existing references to the particle\r\n        //and it's properties to enable garbage collection and avoid memory leaks.\r\n        this._particles[id].state = null;\r\n        this._particles[id].getState = null;\r\n        this._particles[id].mutate = null;\r\n        this._particles[id].set = null;\r\n        this._particles[id].subscribe = null;\r\n        this._particles[id].detonate = null;\r\n\r\n        delete this._particles[id];\r\n        delete states[id];\r\n        delete mutators[id];\r\n        delete derivativeSubs[id];\r\n        delete componentSubs[id];\r\n        delete otherSubs[id];\r\n      },\r\n    };\r\n  }\r\n\r\n  particle({ id, initialState, mutator, overwrite }) {\r\n    if (this._particles[id]) return this.getParticle({ id });\r\n\r\n    //initialize particle based on provided data.\r\n    const states = this.particles.states;\r\n    if (!states[id]) this.setParticle({ id, initialState, mutator });\r\n    else {\r\n      if (states[id] && !overwrite) this.setParticle({ id, mutator });\r\n      else this.setParticle({ id, initialState, mutator });\r\n    }\r\n\r\n    return this.getParticle({ id });\r\n  }\r\n\r\n  getDerivative({ id, storeId }) {\r\n    //return surrogate if the derivative is not ready.\r\n    if (!this._derivatives[id]) {\r\n      const surrogate = {\r\n        state: null,\r\n        getState: () => {},\r\n        subscribe: () => {},\r\n        detonate: () => {},\r\n        unavailable: true,\r\n      };\r\n\r\n      if (storeId) {\r\n        return [surrogate, null];\r\n      }\r\n\r\n      return surrogate;\r\n    }\r\n\r\n    //add storeId to component subscriptions if present.\r\n    if (storeId) {\r\n      const componentSubs = this.derivatives.componentSubs;\r\n      if (componentSubs[id]) {\r\n        componentSubs[id].push(storeId);\r\n      } else {\r\n        componentSubs[id] = [];\r\n        componentSubs[id].push(storeId);\r\n      }\r\n      const unsubscribe = () => {\r\n        //try catch to prevent crashing due to errors in case the\r\n        //derivative has already been deleted.\r\n        try {\r\n          const index = componentSubs[id].indexOf(storeId);\r\n          componentSubs[id].splice(index, 1);\r\n        } catch (err) {\r\n          //throw error into the abyss.\r\n        }\r\n      };\r\n\r\n      return [this._derivatives[id], unsubscribe];\r\n    }\r\n\r\n    return this._derivatives[id];\r\n  }\r\n\r\n  setDerivative({ id, transform }) {\r\n    const states = this.derivatives.states;\r\n    const transforms = this.derivatives.transforms;\r\n    const particleSubs = this.derivatives.particleSubs;\r\n    const componentSubs = this.derivatives.componentSubs;\r\n    const otherSubs = this.derivatives.otherSubs;\r\n\r\n    if (transform) {\r\n      transforms[id] = transform;\r\n    }\r\n\r\n    try {\r\n      states[id] = transforms[id]({\r\n        get: (particleId) =>\r\n          this.get({ particleId, derivativeId: id, firstTime: true }),\r\n      });\r\n    } catch (err) {\r\n      states[id] = null;\r\n    }\r\n\r\n    this._derivatives[id] = {\r\n      state: states[id],\r\n      getState: (payload) =>\r\n        transforms[id]({\r\n          get: (particleId) => this.get({ particleId, derivativeId: id }),\r\n          payload,\r\n        }),\r\n      subscribe: (listener) => {\r\n        if (otherSubs[id]) otherSubs[id].push(listener);\r\n        else {\r\n          otherSubs[id] = [];\r\n          otherSubs[id].push(listener);\r\n        }\r\n        return () => {\r\n          const index = otherSubs[id].indexOf(listener);\r\n          otherSubs[id].splice(index, 1);\r\n        };\r\n      },\r\n      detonate: () => {\r\n        //set properties to null to release all existing references to the derivative\r\n        //and it's properties to enable garbage collection and avoid memory leaks.\r\n        this._derivatives[id].state = null;\r\n        this._derivatives[id].getState = null;\r\n        this._derivatives[id].subscribe = null;\r\n        this._derivatives[id].detonate = null;\r\n\r\n        //unsubscribe from all particles currently subscribed to.\r\n        particleSubs[id].forEach((unsubscribe) => unsubscribe());\r\n\r\n        delete this._derivatives[id];\r\n        delete states[id];\r\n        delete transforms[id];\r\n        delete particleSubs[id];\r\n        delete componentSubs[id];\r\n        delete otherSubs[id];\r\n      },\r\n    };\r\n  }\r\n\r\n  derivative({ id, transform }) {\r\n    if (this._derivatives[id]) return this.getDerivative({ id });\r\n\r\n    this.setDerivative({ id, transform });\r\n    return this.getDerivative({ id });\r\n  }\r\n\r\n  getTrigger({ id }) {\r\n    //return surrogate if the trigger is not ready.\r\n    if (!this._triggers[id]) {\r\n      return {\r\n        invoke: () => {},\r\n        subscribe: () => {},\r\n        unavailable: true,\r\n      };\r\n    }\r\n\r\n    return this._triggers[id];\r\n  }\r\n\r\n  setTrigger({ id, initialSubscriptions }) {\r\n    const subscriptions = this.triggers.subscriptions;\r\n    subscriptions[id] = initialSubscriptions || [];\r\n\r\n    this._triggers[id] = {\r\n      invoke: (...payload) => {\r\n        subscriptions[id].forEach((listener) => listener(...payload));\r\n      },\r\n      subscribe: (listener) => {\r\n        subscriptions[id].push(listener);\r\n        return () => {\r\n          const index = subscriptions[id].indexOf(listener);\r\n          subscriptions[id].splice(index, 1);\r\n        };\r\n      },\r\n      detonate: () => {\r\n        //set properties to null to release all existing references to the trigger\r\n        //and it's properties to enable garbage collection and avoid memory leaks.\r\n        this._triggers[id].invoke = null;\r\n        this._triggers[id].subscribe = null;\r\n\r\n        delete this._triggers[id];\r\n        delete subscriptions[id];\r\n      },\r\n    };\r\n  }\r\n\r\n  trigger({ id, initialSubscriptions }) {\r\n    if (this._triggers[id]) return this.getTrigger({ id });\r\n\r\n    this.setTrigger({ id, initialSubscriptions });\r\n    return this.getTrigger({ id });\r\n  }\r\n}\r\n","let currentEntity;\r\n\r\nfunction setCurrentEntity(entity) {\r\n  currentEntity = entity;\r\n}\r\n\r\nfunction getCurrentEntity() {\r\n  return currentEntity;\r\n}\r\n\r\nlet getCurrentStoreMethod;\r\n\r\nfunction getCurrentStore(storeId) {\r\n  return getCurrentStoreMethod(storeId);\r\n}\r\n\r\nlet getCurrentStoreIdMethod;\r\n\r\nfunction getCurrentStoreId() {\r\n  return getCurrentStoreIdMethod();\r\n}\r\n\r\nlet renderComponentMethod;\r\n\r\nfunction renderComponent(storeId) {\r\n  renderComponentMethod(storeId);\r\n}\r\n\r\nlet getPreventMultipleRendersMethod;\r\n\r\nfunction getPreventMultipleRenders() {\r\n  return getPreventMultipleRendersMethod;\r\n}\r\n\r\nlet setPreventMultipleRendersMethod;\r\n\r\nfunction setPreventMultipleRenders(boolean) {\r\n  setPreventMultipleRendersMethod(boolean);\r\n}\r\n\r\nfunction addAdaptationMethods({\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  renderComponent,\r\n  getPreventMultipleRenders,\r\n  setPreventMultipleRenders,\r\n}) {\r\n  getCurrentStoreMethod = getCurrentStore;\r\n  getCurrentStoreIdMethod = getCurrentStoreId;\r\n  renderComponentMethod = renderComponent;\r\n  getPreventMultipleRendersMethod = getPreventMultipleRenders;\r\n  setPreventMultipleRendersMethod = setPreventMultipleRenders;\r\n}\r\n\r\nexport {\r\n  setCurrentEntity,\r\n  getCurrentEntity,\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  renderComponent,\r\n  addAdaptationMethods,\r\n  getPreventMultipleRenders,\r\n  setPreventMultipleRenders,\r\n};\r\n","import { getCurrentEntity } from \"./adaptations\";\r\n\r\nfunction adaptEntity() {\r\n  return getCurrentEntity();\r\n}\r\n\r\nexport default adaptEntity;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\nimport addNqtxUpdate from \"./nqtxUpdates\";\r\n\r\nfunction adaptParticle(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.particles) {\r\n    currentStore.particles = [];\r\n    currentStore.currentAdaptationIds.particle = 0;\r\n    currentStore.particleCleanups = [];\r\n    currentStore.currentAdaptationIds.particleCleanup = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (\r\n      !(currentStore.currentAdaptationIds.particle in currentStore.particles)\r\n    ) {\r\n      let particle = currentEntity.getParticle({ id, storeId: currentStoreId });\r\n      currentStore.particles[currentStore.currentAdaptationIds.particle] =\r\n        particle[0];\r\n      currentStore.particleCleanups[\r\n        currentStore.currentAdaptationIds.particleCleanup\r\n      ] = particle[1];\r\n      if (\r\n        currentStore.particles[currentStore.currentAdaptationIds.particle]\r\n          .unavailable\r\n      ) {\r\n        addNqtxUpdate(currentStoreId);\r\n      }\r\n    }\r\n    if (\r\n      currentStore.particles[currentStore.currentAdaptationIds.particle]\r\n        .unavailable\r\n    ) {\r\n      let particle = currentEntity.getParticle({ id, storeId: currentStoreId });\r\n      currentStore.particles[currentStore.currentAdaptationIds.particle] =\r\n        particle[0];\r\n      currentStore.particleCleanups[\r\n        currentStore.currentAdaptationIds.particleCleanup\r\n      ] = particle[1];\r\n    }\r\n\r\n    return currentStore.particles[currentStore.currentAdaptationIds.particle++];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptParticle() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptParticle;\r\n","import { renderComponent, setPreventMultipleRenders } from \"./adaptations\";\r\n\r\nconst nqtxUpdateArray = [];\r\n\r\nfunction addNqtxUpdate(storeId) {\r\n  nqtxUpdateArray.push(storeId);\r\n\r\n  if (nqtxUpdateArray.length === 1) {\r\n    queueMicrotask(() => {\r\n      const newNqtxUpdateArray = [...nqtxUpdateArray];\r\n      nqtxUpdateArray.length = 0;\r\n      setPreventMultipleRenders(true);\r\n      newNqtxUpdateArray.forEach((storeId) => renderComponent(storeId));\r\n      setPreventMultipleRenders(false);\r\n    });\r\n  }\r\n}\r\n\r\nexport default addNqtxUpdate;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\nimport addNqtxUpdate from \"./nqtxUpdates\";\r\n\r\nfunction adaptTrigger(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.triggers) {\r\n    currentStore.triggers = [];\r\n    currentStore.currentAdaptationIds.trigger = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (!(currentStore.currentAdaptationIds.trigger in currentStore.triggers)) {\r\n      currentStore.triggers[currentStore.currentAdaptationIds.trigger] =\r\n        currentEntity.getTrigger({ id });\r\n      if (\r\n        currentStore.triggers[currentStore.currentAdaptationIds.trigger]\r\n          .unavailable\r\n      ) {\r\n        addNqtxUpdate(currentStoreId);\r\n      }\r\n    }\r\n    if (\r\n      currentStore.triggers[currentStore.currentAdaptationIds.trigger]\r\n        .unavailable\r\n    ) {\r\n      currentStore.triggers[currentStore.currentAdaptationIds.trigger] =\r\n        currentEntity.getTrigger({ id });\r\n    }\r\n\r\n    return currentStore.triggers[currentStore.currentAdaptationIds.trigger++];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptTrigger() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptTrigger;\r\n","import {\r\n  getCurrentStore,\r\n  getCurrentStoreId,\r\n  getCurrentEntity,\r\n} from \"./adaptations\";\r\nimport addNqtxUpdate from \"./nqtxUpdates\";\r\n\r\nfunction adaptDerivative(id) {\r\n  const currentStore = getCurrentStore();\r\n  const currentStoreId = getCurrentStoreId();\r\n  const currentEntity = getCurrentEntity();\r\n\r\n  if (currentStore && !currentStore.derivatives) {\r\n    currentStore.derivatives = [];\r\n    currentStore.currentAdaptationIds.derivative = 0;\r\n    currentStore.derivativeCleanups = [];\r\n    currentStore.currentAdaptationIds.derivativeCleanup = 0;\r\n  }\r\n\r\n  if (currentStore) {\r\n    if (\r\n      !(\r\n        currentStore.currentAdaptationIds.derivative in currentStore.derivatives\r\n      )\r\n    ) {\r\n      let derivative = currentEntity.getDerivative({\r\n        id,\r\n        storeId: currentStoreId,\r\n      });\r\n      currentStore.derivatives[currentStore.currentAdaptationIds.derivative] =\r\n        derivative[0];\r\n      currentStore.derivativeCleanups[\r\n        currentStore.currentAdaptationIds.derivativeCleanup\r\n      ] = derivative[1];\r\n      if (\r\n        currentStore.derivatives[currentStore.currentAdaptationIds.derivative]\r\n          .unavailable\r\n      ) {\r\n        addNqtxUpdate(currentStoreId);\r\n      }\r\n    }\r\n    if (\r\n      currentStore.derivatives[currentStore.currentAdaptationIds.derivative]\r\n        .unavailable\r\n    ) {\r\n      let derivative = currentEntity.getDerivative({\r\n        id,\r\n        storeId: currentStoreId,\r\n      });\r\n      currentStore.derivatives[currentStore.currentAdaptationIds.derivative] =\r\n        derivative[0];\r\n      currentStore.derivativeCleanups[\r\n        currentStore.currentAdaptationIds.derivativeCleanup\r\n      ] = derivative[1];\r\n    }\r\n\r\n    return currentStore.derivatives[\r\n      currentStore.currentAdaptationIds.derivative++\r\n    ];\r\n  } else {\r\n    throw new Error(\r\n      \"adaptDerivative() can only be used inside a Component or a Custom Adaptation.\"\r\n    );\r\n  }\r\n}\r\n\r\nexport default adaptDerivative;\r\n"],"names":[],"version":3,"file":"nqtx.js.map","sourceRoot":"/"}